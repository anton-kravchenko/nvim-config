General:
NVIM_APPNAME=<dir_name> nvim - set config folder and run nvim
:e $MYVIMRC - opens vim rc file
<leader> t h -> Select theme
:TSInstall <language> - install language support
:TSInstallInfo - show installed language support

File tree:
Ctrl + n - file tree
m - mark file
a - create a file
c - copy file
p - paste file
r - rename File
Ctrl + K - show file info
P - go to parent folder

Editing:
w - jump one word forward
W - jump to the beginning of the next word after space
b - jump one word backward
B - jump to the beginning of the previoys word after space
e - jump one word forward till the end of word
E - jump till the end of word (including punctuation) 
x - remove charecter under cursor
X - remove character before cursor
A - append to the end of line
a - insert cursor after the cursor
O - insert new line above current
o - insert new line below current
J - join the line below to the current line
5J - join the next 5 lines
yy - copy line 
p - paste line 
r <character> - replace character below cursor 
:R <file_path> - adds contents of the file at the cursor
:w <file_name> - save file (or selected test) to a file
:r !<cmd> - puts result from the command at the cursor
:R <replace text> - replaces multiple characters
ddkP - move line up
fh - just to first occurence of `h` in the line 

Advanced:
Select -> !<shell cmd> - like `!grep desc` - filter out lines that do not have `desc` in them
In insert mode = Ctrl + = <equasion> - inserts result of equasion 

Move:
:m -3 - move 3 lines up
:m +3 - move 3 lines down 
:m 3 - move to the third line

Copying text:
Y - yank till the end of line
yy - yank the whole line
y - yank selected text
y$ - yank till the end of line
y_ - yank to start of line
yiw - yank current word
y^ - yank from start of the line till cursor
yw - yank till the end of word under cursor
y5w - yank 5 words
p - paste text after cursor
P - paste text before cursor
yap - yank paragraph (current if in or next if on next line)
y$ - yank till the end of line
yiw - yank current word
y^ - yank from start of the line till cursor

Git:
<leader> g t - show git status 
<leader> c m - show git commits 
<leader> p h - preview git change

Set:
:set ic - search ignoring case
:set noic - disable search ignoring case
:set is - show partial matches
:set hls - highlight all matches
:set no<cmd> - disable above commands
:set inv<cmd> - invert cmd

Text navigation (vim motions):
ii - move cursor to the center of the screen (vertically)
3w - jump 3 words forward
2b - jump 2 words backwards
0 - jump to the start of the line
Ctrl o - go to previous cursor location in the jump list
Ctrl i - go to next cursor location in the jump list
g; - go to previous change location
g, - ho to next change location 
:jumps - show the list of jumps
{ - jump to previous paragraph
} - jump to next paragraph
] ) - jump to next closing )
[ } - jump to previous closing }
f | - just to first | in the current line
+ - jump to beginning on a new line 

Change case:
u - to lower case
U - to upper case
~ - toggle case

Counter: 
Ctrl + a - increment number under the cursor 
Ctrl + x - decrement number under the cursor

Scrolling:
Ctrl + e - scroll down (without moving cursor)
Ctrl + y - scroll up (without moving cursor)
Ctrl + b - scroll 1 page up
Ctrl + f - scroll 1 page down
Ctrl + u - scroll half a page up
Ctrl + d - scroll half a page down

Cursor:
Ctrl + g - show location in a file and file status 
G - go to the end of file
gg - go to the start of the file
<number> G - go to line 
jk - go to normal mode

Search:
? - search backwards in the current file
/ - search forward in the current file
n - next occurence
N - previous occurence
* - select all occurences of the work under cursor

Run terminal command:
:! <cmd> - runs external command
:help :term - opens help for terminal
<C-\><C-N> - leave terminal mode
i - to enter terminal mode


Help:
:help - opens help 
<leader> s h - opens help search (kickstart onlt)

Matching parenthesis:
% - goes to matching parenthesis

Substitution:
:s/one/two/ - replace the first occurence in the line 
:s/one/two/g - replace all occurences in the line 
:1,10s/one/two/g - replace all occurences on lines 1 to 10
:%s/old/new/c - replace all occurences in the file
:%s/old/new/gc - replace all occurences in the file with prompt
find src/ \( -name '*.tsx' -o -name '*.ts' \) | xargs sed -i "" 's/foo/bar/' - replace all occurences in `src`

Change:
ciw - remove word under the cursor and go to insert mode
cib - removes text in a block (paranthesis ()) and enters insert mode
ciB - removes text in a block (paranthesis {}) and enters insert mode
cw - remove till the end of work under the cursor
. - replay (work when using search, then making a change using c and then navigating to the next entry)
viw - visually select word under cursor
_"ciw - change in word without copying to buffer

Vertical column change 
<C>+v I - select lines and go to Insert mode

Registry:
:reg - opens registry of yanked text
"3p - paste 3rd yanked text from the registry
:7y - yank into 7th register
"%p - pastes the name of the file being edited

Macros:
q h <macro> q - q starts the macro, h is the registry for macro (can be anything) and q quits macro
@h - replay macro from h registry
5@h - replay macro h 5 times

Running macro on multiple lines:
Select + :norm <key sequence><Enter>

Indenting:
> - indent right (. to repeat)
< - indent left  (. to repeat)
== - indent current line

Editing (deleting)
dw - delete until stat of next word
de - delete until current word
d$ - delete until the end of the curren line
d2w - delete next 2 words
dd - remove whole line
D - remove thole line
2dd - remove next 2 lines
ce - remove till the end of work and jump to insert mode
p - puts deleted text back
<leader> . - repeat last action
daw - delete word under cursor
diw - delete word under cursor
diW - delete the whole thing under cursor until previous/next space
dib - delete block (inside ())
diB - delete block (inside {})
daB - delete current paragraph
dap - delete complete paragraph
J - move selected text DOWN
K - move selected text UP

Window manipulation:
Ctrl w o - close all other windows 
Ctrl w v - split vertically
Ctrl w s - split horizontally
Ctrl w J - change layout horizontal
Ctrl w <leader> - change layout to vertical

Selecting:
Shift + G - select till the end of file

Quotes:
di' - delete all inside single quote
da' - delete all including quotes
ci' - delete all inclding quotes and put to INSERT mode
dt' - delete till single quote
yi' - yank between single quotes
ds' - removes surrounding '
cs'` - changes surrounding ' with `
ysiw' - surround with '

Selecting:
vt' - select all till '
vap - select paragraph (defined by new lines)

Undo/Redo:
u - undo 1 command
U - undo all commands in the current line 
Ctrl + R - redo

Comments:
gcc - toggle line comment
gcip - toggle paragraph comment
dic - delete commented glock

Fuzzy find file:
<leader> f f - search over all files 
<leader> f a - search over all files (including hidden)
<leader> f b - search over open files
<leader> f w - search over all files
<leader> f z - search over current buffer
<leader> f s - search over './src' folder

LSP:
<leader> gd - go to definition
<leader> gr - look for references
<leader> l f - open floating diagnostics popup
<leader> + D - go to typ definition
Ctrl + F - search for LSP by name
<leader> c a - code action (extract code into a function)
<leader> r a - rename
K - hower type info
<leader> g e - show diagnostic error in a popup
<leader> g [ - previous error message
<leader> g ] - next error message
<leader> t t - toggle trouble window
K - show floating type info

Mason:
:Mason - install LSPs

Telescope:
:Telescope keymaps - show telescope keymaps
:Telescope help_tags - show all vim configurations
<leader> cd - fuzzy find and open folder
tkm - show Telescope keymaps (:Telescope keymaps)

Quickfix:
C q - send search results to Quickfix
:cnext - open next line from quickfix
:cclose - close quickfix
:copen - open quickfix
vim.keymap.set("n", "<key>", "<cmd>cnext<CR>") - keybinding for moving to next item in quick fix
<leader>k - go to prev line in quickfix
<leader>j - go to next line in quickfix

Cheat sheet:
<leader> c h - open cheet shett

Line numbes:
<leader> n - toggle line number 
<leader> rn - toggle relative line number 

Window navigation:
Ctrl + w + > - increase width
Ctrl + w + < - decrease width
:sp - split horizontally 
:vsp - split vertically
Ctrl + hjkl - select Window
Ctrl + w + q - close window

Save file:
Ctrl S - saves file

Directory:
:pwd - print current working directory
:cd - change directory (to home)

Tabs:
Tab - open next tab
Shift Tab - open previous tab
Space x - close tab

Quit:
q - current window 
qa - all windowns

Terminal:
<leader> h - open terminal in horizontal window
<leader> v - open terminal in vertical window

Packages:
Lazy sync - sync packages

Dir/file navigation:
:e <dir/file name>

Lua:
:lua print 'hello' - run Lua :lua vim.opt.number = false - hides numbers
https://neovim.io/doc/user/lua-guide.html
https://learnxinyminutes.com/docs/lua/
:lua = vim.uv.cwd() - prints current working directory

Formatting:
= - fixes indents selected text 
gg=G - fixes indents in the whole file
=ap - formats paragraph

Custom config:
:source % - run init lua file


Key names:
<leader> - leader key
<CR> - caret return (enter)
<C-n> - control n

Show recent open files:
:browse oldfiles

Mappings:
:nmap - for normal mode mappings
:vmap - for visual mode mappings
:imap - for insert mode mappings

Folding:
za - toggle fold at the cursor 
zM - close all folds
zR - open all folds

Encryption:
g? - ROT13 encodes selected text

Vim input picker: 
`vim.fn.input`

